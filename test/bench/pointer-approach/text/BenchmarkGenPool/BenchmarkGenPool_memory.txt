File: test.test
Type: alloc_space
Time: 2025-08-04 17:07:28 PDT
Showing nodes accounting for 76.74MB, 100% of 76.74MB total
      flat  flat%   sum%        cum   cum%
         0     0%     0%    38.50MB 50.17%  github.com/AlexsanderHamir/GenPool/test.BenchmarkGenPool
         0     0%     0%    38.50MB 50.17%  testing.(*B).runN
      38MB 49.52% 49.52%       38MB 49.52%  testing.(*B).RunParallel
         0     0% 49.52%    29.50MB 38.44%  testing.(*B).launch
   27.50MB 35.83% 85.35%    27.50MB 35.83%  testing.(*B).RunParallel.func1
         0     0% 85.35%        9MB 11.73%  testing.(*B).run1.func1
         0     0% 85.35%     6.05MB  7.88%  runtime.newproc.func1
         0     0% 85.35%     6.05MB  7.88%  runtime.newproc1
         0     0% 85.35%     6.05MB  7.88%  runtime.systemstack
    5.50MB  7.17% 92.52%     5.50MB  7.17%  runtime.malg
         0     0% 92.52%     2.04MB  2.65%  runtime/pprof.(*profileBuilder).appendLocsForStack
         0     0% 92.52%     2.04MB  2.65%  runtime/pprof.(*profileBuilder).build
    0.52MB  0.68% 93.20%     2.04MB  2.65%  runtime/pprof.(*profileBuilder).emitLocation
         0     0% 93.20%     2.04MB  2.65%  runtime/pprof.profileWriter
    0.88MB  1.15% 94.35%     1.52MB  1.98%  compress/flate.NewWriter (inline)
         0     0% 94.35%     1.52MB  1.98%  compress/gzip.(*Writer).Write
         0     0% 94.35%     1.52MB  1.98%  runtime/pprof.(*profileBuilder).flush
         0     0% 94.35%     1.16MB  1.51%  main.main
         0     0% 94.35%     1.16MB  1.51%  runtime.main
    1.16MB  1.51% 95.85%     1.16MB  1.51%  runtime/pprof.StartCPUProfile
         0     0% 95.85%     1.16MB  1.51%  testing.(*M).Run
         0     0% 95.85%     1.16MB  1.51%  testing.(*M).before
         0     0% 95.85%     1.16MB  1.51%  testing/internal/testdeps.TestDeps.StartCPUProfile
       1MB  1.31% 97.16%        1MB  1.31%  runtime.allocm
         0     0% 97.16%        1MB  1.31%  runtime.mstart
         0     0% 97.16%        1MB  1.31%  runtime.mstart0
         0     0% 97.16%        1MB  1.31%  runtime.mstart1
         0     0% 97.16%        1MB  1.31%  runtime.newm
         0     0% 97.16%        1MB  1.31%  runtime.resetspinning
         0     0% 97.16%        1MB  1.31%  runtime.schedule
         0     0% 97.16%        1MB  1.31%  runtime.startm
         0     0% 97.16%        1MB  1.31%  runtime.wakep
    0.64MB  0.83% 97.99%     0.64MB  0.83%  compress/flate.(*compressor).init
    0.54MB  0.71% 98.70%     0.54MB  0.71%  runtime.allgadd
    0.50MB  0.65% 99.35%     0.50MB  0.65%  runtime.(*scavengerState).init
         0     0% 99.35%     0.50MB  0.65%  runtime.bgscavenge
         0     0% 99.35%     0.50MB  0.65%  github.com/AlexsanderHamir/GenPool/pool.NewPoolWithConfig[go.shape.struct { Name string; Data []uint8; Result int64; github.com/AlexsanderHamir/GenPool/test._ [16]uint8; Fields = github.com/AlexsanderHamir/GenPool/pool.Fields[github.com/AlexsanderHamir/GenPool/test.BenchmarkObject] },go.shape.*github.com/AlexsanderHamir/GenPool/test.BenchmarkObject]
    0.50MB  0.65%   100%     0.50MB  0.65%  github.com/AlexsanderHamir/GenPool/pool.initShards[go.shape.struct { Name string; Data []uint8; Result int64; github.com/AlexsanderHamir/GenPool/test._ [16]uint8; Fields = github.com/AlexsanderHamir/GenPool/pool.Fields[github.com/AlexsanderHamir/GenPool/test.BenchmarkObject] },go.shape.*github.com/AlexsanderHamir/GenPool/test.BenchmarkObject]
