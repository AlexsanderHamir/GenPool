File: pool.test
Type: cpu
Time: 2025-07-10 14:56:18 PDT
Duration: 33.32s, Total samples = 184.71s (554.29%)
Showing nodes accounting for 184.71s, 100% of 184.71s total
      flat  flat%   sum%        cum   cum%
     0.02s 0.011% 0.011%    107.14s 58.00%  testing.(*B).RunParallel.func1
     0.05s 0.027% 0.038%    106.51s 57.66%  github.com/AlexsanderHamir/GenPool/pool_test.BenchmarkSyncPool.func2
    14.13s  7.65%  7.69%    106.21s 57.50%  github.com/AlexsanderHamir/GenPool/pool_test.highLatencyWorkload
     4.99s  2.70% 10.39%     90.80s 49.16%  math/rand/v2.N[go.shape.uint8] (inline)
    26.35s 14.27% 24.65%     85.77s 46.43%  math/rand/v2.(*Rand).uint64n
    23.66s 12.81% 37.46%     59.29s 32.10%  math/rand/v2.(*Rand).Uint64 (inline)
    48.34s 26.17% 63.63%     48.34s 26.17%  internal/chacha8rand.block
     2.87s  1.55% 65.19%     35.53s 19.24%  math/rand/v2.runtimeSource.Uint64
    13.66s  7.40% 72.58%     32.66s 17.68%  runtime.rand
     0.01s 0.0054% 72.59%     17.80s  9.64%  runtime.systemstack
     0.03s 0.016% 72.61%     15.45s  8.36%  runtime.(*mheap).allocSpan
    14.86s  8.05% 80.65%     14.86s  8.05%  runtime.madvise
         0     0% 80.65%     14.70s  7.96%  runtime.sysUsed (inline)
         0     0% 80.65%     14.70s  7.96%  runtime.sysUsedOS (inline)
         0     0% 80.65%     14.46s  7.83%  runtime.(*mheap).alloc.func1
    13.83s  7.49% 88.14%     13.83s  7.49%  internal/chacha8rand.(*State).Next (inline)
     0.01s 0.0054% 88.14%      9.40s  5.09%  runtime.mcall
     0.02s 0.011% 88.15%      9.20s  4.98%  runtime.schedule
     0.06s 0.032% 88.19%      8.16s  4.42%  runtime.findRunnable
     7.62s  4.13% 92.31%      7.62s  4.13%  runtime.usleep
     0.01s 0.0054% 92.32%      7.49s  4.06%  runtime.park_m
     0.07s 0.038% 92.36%      5.59s  3.03%  runtime.lock2
         0     0% 92.36%      5.59s  3.03%  runtime.lockWithRank (inline)
         0     0% 92.36%      5.39s  2.92%  runtime.lock (partial-inline)
     4.38s  2.37% 94.73%      5.17s  2.80%  internal/chacha8rand.(*State).Refill
         0     0% 94.73%      5.12s  2.77%  runtime.osyield (inline)
         0     0% 94.73%      3.34s  1.81%  runtime.newstack
         0     0% 94.73%      3.23s  1.75%  runtime.morestack
     0.03s 0.016% 94.74%      2.64s  1.43%  runtime.stealWork
         0     0% 94.74%      2.50s  1.35%  runtime.runqgrab
         0     0% 94.74%      2.50s  1.35%  runtime.runqsteal
         0     0% 94.74%      2.24s  1.21%  runtime.goschedImpl
         0     0% 94.74%      2.12s  1.15%  runtime.gopreempt_m (inline)
         0     0% 94.74%      1.93s  1.04%  runtime.semasleep
     1.91s  1.03% 95.78%      1.91s  1.03%  runtime.pthread_cond_wait
     0.04s 0.022% 95.80%      1.89s  1.02%  runtime.wakep
         0     0% 95.80%      1.78s  0.96%  runtime.goexit0
     0.03s 0.016% 95.82%      1.66s   0.9%  runtime.(*timers).check
         0     0% 95.82%      1.64s  0.89%  runtime.gcBgMarkWorker.func2
     0.02s 0.011% 95.83%      1.64s  0.89%  runtime.gcDrain
         0     0% 95.83%      1.58s  0.86%  runtime.preemptM
     1.58s  0.86% 96.68%      1.58s  0.86%  runtime.pthread_kill
         0     0% 96.68%      1.58s  0.86%  runtime.signalM (inline)
         0     0% 96.68%      1.54s  0.83%  runtime.stopm
         0     0% 96.68%      1.51s  0.82%  runtime.mPark (inline)
         0     0% 96.68%      1.51s  0.82%  runtime.notesleep
         0     0% 96.68%      1.43s  0.77%  runtime.gcDrainMarkWorkerDedicated (inline)
     0.02s 0.011% 96.69%      1.39s  0.75%  runtime.(*timers).run
     0.08s 0.043% 96.74%      1.35s  0.73%  runtime.(*timer).unlockAndRun
     0.03s 0.016% 96.75%      1.20s  0.65%  runtime.markroot
         0     0% 96.75%      1.20s  0.65%  runtime.semawakeup
         0     0% 96.75%      1.18s  0.64%  runtime.(*mheap).allocManual
     1.18s  0.64% 97.39%      1.18s  0.64%  runtime.pthread_cond_signal
         0     0% 97.39%      1.16s  0.63%  runtime.markroot.func1
         0     0% 97.39%      1.15s  0.62%  runtime.copystack
         0     0% 97.39%      1.15s  0.62%  runtime.stackalloc
         0     0% 97.39%      1.15s  0.62%  runtime.stackcacherefill
     0.01s 0.0054% 97.40%      1.12s  0.61%  runtime.mallocgc
     0.01s 0.0054% 97.40%      1.12s  0.61%  runtime.stackpoolalloc
         0     0% 97.40%      1.06s  0.57%  runtime.notewakeup
     0.07s 0.038% 97.44%      1.05s  0.57%  runtime.ready
         0     0% 97.44%      1.05s  0.57%  runtime.startm
     0.99s  0.54% 97.98%      0.99s  0.54%  runtime.kevent
         0     0% 97.98%      0.98s  0.53%  runtime.goready (inline)
     0.02s 0.011% 97.99%      0.98s  0.53%  runtime.goroutineReady
         0     0% 97.99%      0.98s  0.53%  runtime.netpoll
     0.01s 0.0054% 97.99%      0.96s  0.52%  runtime.goroutineReady.goready.func1
         0     0% 97.99%      0.87s  0.47%  runtime.preemptone
     0.03s 0.016% 98.01%      0.83s  0.45%  runtime.growslice
         0     0% 98.01%      0.82s  0.44%  runtime.resetspinning
         0     0% 98.01%      0.79s  0.43%  runtime.newobject
         0     0% 98.01%      0.75s  0.41%  runtime.deductAssistCredit
         0     0% 98.01%      0.75s  0.41%  runtime.gcAssistAlloc
         0     0% 98.01%      0.73s   0.4%  runtime.suspendG
         0     0% 98.01%      0.56s   0.3%  runtime.gcBgMarkWorker
         0     0% 98.01%      0.49s  0.27%  runtime.runSafePointFn
         0     0% 98.01%      0.47s  0.25%  runtime.preemptall
     0.02s 0.011% 98.02%      0.43s  0.23%  runtime.scanstack
         0     0% 98.02%      0.42s  0.23%  runtime.gcAssistAlloc.func2
         0     0% 98.02%      0.42s  0.23%  runtime.gcAssistAlloc1
         0     0% 98.02%      0.41s  0.22%  runtime.gcstopm
         0     0% 98.02%      0.40s  0.22%  runtime.(*gcControllerState).enlistWorker
     0.19s   0.1% 98.12%      0.40s  0.22%  time.Sleep
     0.01s 0.0054% 98.13%      0.37s   0.2%  runtime.gcDrainN
     0.12s 0.065% 98.19%      0.36s  0.19%  runtime.scanobject
         0     0% 98.19%      0.35s  0.19%  runtime.gcMarkDone
     0.35s  0.19% 98.38%      0.35s  0.19%  runtime.memclrNoHeapPointers
         0     0% 98.38%      0.32s  0.17%  runtime.(*gcWork).balance
         0     0% 98.38%      0.31s  0.17%  runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func2
     0.30s  0.16% 98.54%      0.30s  0.16%  runtime.asyncPreempt
     0.01s 0.0054% 98.55%      0.30s  0.16%  runtime.forEachPInternal
         0     0% 98.55%      0.29s  0.16%  runtime.semacquire (inline)
     0.05s 0.027% 98.58%      0.29s  0.16%  runtime.semacquire1
         0     0% 98.58%      0.28s  0.15%  runtime.gcMarkDone.forEachP.func5
     0.03s 0.016% 98.59%      0.28s  0.15%  runtime.scanframeworker
     0.01s 0.0054% 98.60%      0.27s  0.15%  runtime.nanotime (inline)
         0     0% 98.60%      0.26s  0.14%  runtime.mallocgcSmallNoscan
     0.24s  0.13% 98.73%      0.26s  0.14%  runtime.nanotime1
         0     0% 98.73%      0.25s  0.14%  runtime.(*mcache).nextFree
         0     0% 98.73%      0.24s  0.13%  runtime.(*mcache).refill
         0     0% 98.73%      0.21s  0.11%  runtime.(*mcentral).cacheSpan
         0     0% 98.73%      0.21s  0.11%  runtime.(*timer).updateHeap
     0.01s 0.0054% 98.73%      0.21s  0.11%  runtime.(*timers).deleteMin
     0.12s 0.065% 98.80%      0.21s  0.11%  runtime.casgstatus
         0     0% 98.80%      0.21s  0.11%  runtime.gcDrainMarkWorkerIdle (inline)
         0     0% 98.80%      0.21s  0.11%  runtime.newproc.func1
         0     0% 98.80%      0.20s  0.11%  runtime.gcStart.func2
         0     0% 98.80%      0.20s  0.11%  runtime.stopTheWorldWithSema
         0     0% 98.80%      0.19s   0.1%  runtime.(*mheap).reclaim
         0     0% 98.80%      0.19s   0.1%  runtime.unlock (partial-inline)
     0.04s 0.022% 98.82%      0.19s   0.1%  runtime.unlock2
         0     0% 98.82%      0.19s   0.1%  runtime.unlockWithRank (inline)
     0.15s 0.081% 98.90%      0.18s 0.097%  runtime.(*timers).siftDown
     0.03s 0.016% 98.92%      0.18s 0.097%  runtime.execute
     0.14s 0.076% 98.99%      0.18s 0.097%  runtime.gopark
     0.07s 0.038% 99.03%      0.18s 0.097%  runtime.wbBufFlush1
     0.08s 0.043% 99.07%      0.17s 0.092%  runtime.greyobject
         0     0% 99.07%      0.16s 0.087%  runtime.(*pageAlloc).scavenge.func1
         0     0% 99.07%      0.16s 0.087%  runtime.(*pageAlloc).scavengeOne
     0.03s 0.016% 99.09%      0.16s 0.087%  runtime.scanblock
         0     0% 99.09%      0.16s 0.087%  runtime.sysUnused (inline)
         0     0% 99.09%      0.16s 0.087%  runtime.sysUnusedOS (inline)
         0     0% 99.09%      0.15s 0.081%  runtime.wbBufFlush
         0     0% 99.09%      0.15s 0.081%  runtime.wbBufFlush.func1
     0.01s 0.0054% 99.10%      0.15s 0.081%  sync.(*Pool).Get
         0     0% 99.10%      0.14s 0.076%  github.com/AlexsanderHamir/GenPool/pool_test.BenchmarkSyncPool.func1
         0     0% 99.10%      0.14s 0.076%  github.com/AlexsanderHamir/GenPool/pool_test.allocator (inline)
     0.14s 0.076% 99.17%      0.14s 0.076%  runtime.memmove
         0     0% 99.17%      0.14s 0.076%  runtime.unlock2Wake
     0.01s 0.0054% 99.18%      0.13s  0.07%  runtime.(*mcentral).grow
     0.08s 0.043% 99.22%      0.13s  0.07%  runtime.findObject
         0     0% 99.22%      0.12s 0.065%  runtime.(*timers).lock (inline)
         0     0% 99.22%      0.12s 0.065%  runtime.gosched_m
     0.03s 0.016% 99.24%      0.11s  0.06%  gcWriteBarrier
         0     0% 99.24%      0.11s  0.06%  runtime.(*mheap).alloc
         0     0% 99.24%      0.11s  0.06%  runtime.gcParkAssist
     0.01s 0.0054% 99.24%      0.11s  0.06%  runtime.getempty
     0.01s 0.0054% 99.25%      0.10s 0.054%  runtime.(*sweepLocked).sweep
         0     0% 99.25%      0.10s 0.054%  runtime.gdestroy
     0.01s 0.0054% 99.25%      0.10s 0.054%  runtime.newproc1
         0     0% 99.25%      0.09s 0.049%  runtime.(*gcWork).put
         0     0% 99.25%      0.09s 0.049%  runtime.(*timer).modify
         0     0% 99.25%      0.09s 0.049%  runtime.(*timer).reset (inline)
         0     0% 99.25%      0.09s 0.049%  runtime.gfput
     0.01s 0.0054% 99.26%      0.09s 0.049%  runtime.mallocgcSmallScanNoHeader
         0     0% 99.26%      0.09s 0.049%  runtime.readyWithTime.goready.func1
         0     0% 99.26%      0.09s 0.049%  runtime.resetForSleep
         0     0% 99.26%      0.07s 0.038%  github.com/AlexsanderHamir/GenPool/pool_test.BenchmarkSyncPool
         0     0% 99.26%      0.07s 0.038%  runtime.(*stkframe).getStackMap
         0     0% 99.26%      0.07s 0.038%  runtime.(*timer).maybeAdd
     0.05s 0.027% 99.29%      0.07s 0.038%  runtime.(*unwinder).resolveInternal
         0     0% 99.29%      0.07s 0.038%  runtime.getempty.func1
         0     0% 99.29%      0.07s 0.038%  runtime.semrelease (inline)
     0.01s 0.0054% 99.29%      0.07s 0.038%  runtime.semrelease1
     0.05s 0.027% 99.32%      0.07s 0.038%  runtime.traceAcquire (inline)
     0.04s 0.022% 99.34%      0.07s 0.038%  sync.(*Pool).Put
         0     0% 99.34%      0.07s 0.038%  testing.(*B).RunParallel
         0     0% 99.34%      0.07s 0.038%  testing.(*B).runN
         0     0% 99.34%      0.06s 0.032%  runtime.(*mheap).reclaimChunk
         0     0% 99.34%      0.06s 0.032%  runtime.(*unwinder).init (inline)
         0     0% 99.34%      0.06s 0.032%  runtime.(*unwinder).initAt
     0.04s 0.022% 99.36%      0.06s 0.032%  runtime.findfunc
         0     0% 99.36%      0.06s 0.032%  runtime.newproc
     0.05s 0.027% 99.39%      0.06s 0.032%  runtime.pcvalue
         0     0% 99.39%      0.06s 0.032%  runtime.preemptPark
         0     0% 99.39%      0.06s 0.032%  runtime.sweepone
         0     0% 99.39%      0.06s 0.032%  testing.(*B).launch
         0     0% 99.39%      0.05s 0.027%  runtime.(*mheap).freeSpan (inline)
         0     0% 99.39%      0.05s 0.027%  runtime.(*stackScanState).putPtr
         0     0% 99.39%      0.05s 0.027%  runtime.(*unwinder).next
     0.01s 0.0054% 99.39%      0.05s 0.027%  runtime.gfget
     0.02s 0.011% 99.40%      0.05s 0.027%  runtime.globrunqget
     0.05s 0.027% 99.43%      0.05s 0.027%  runtime.runqput
     0.04s 0.022% 99.45%      0.04s 0.022%  internal/runtime/atomic.(*Uint32).CompareAndSwap (inline)
     0.04s 0.022% 99.47%      0.04s 0.022%  runtime.(*mspan).base (inline)
         0     0% 99.47%      0.04s 0.022%  runtime.deductSweepCredit
         0     0% 99.47%      0.04s 0.022%  runtime.gcMarkDone.func1
         0     0% 99.47%      0.04s 0.022%  runtime.gfget.func2
         0     0% 99.47%      0.04s 0.022%  runtime.handoff
         0     0% 99.47%      0.04s 0.022%  runtime.pcdatavalue
     0.04s 0.022% 99.50%      0.04s 0.022%  runtime.typePointers.next
     0.03s 0.016% 99.51%      0.03s 0.016%  internal/runtime/atomic.(*Uint8).Load (inline)
     0.01s 0.0054% 99.52%      0.03s 0.016%  runtime.(*gcControllerState).findRunnableGCWorker
         0     0% 99.52%      0.03s 0.016%  runtime.(*gcWork).putBatch
     0.01s 0.0054% 99.52%      0.03s 0.016%  runtime.(*mheap).allocMSpanLocked
     0.01s 0.0054% 99.53%      0.03s 0.016%  runtime.(*mspan).typePointersOfUnchecked
     0.01s 0.0054% 99.53%      0.03s 0.016%  runtime.(*stackScanState).addObject
         0     0% 99.53%      0.03s 0.016%  runtime.(*timer).unlock (inline)
     0.03s 0.016% 99.55%      0.03s 0.016%  runtime.(*timers).cleanHead
         0     0% 99.55%      0.03s 0.016%  runtime.gcStart
     0.02s 0.011% 99.56%      0.03s 0.016%  runtime.heapSetTypeNoHeader (inline)
         0     0% 99.56%      0.03s 0.016%  runtime.isSystemGoroutine
         0     0% 99.56%      0.03s 0.016%  runtime.parkunlock_c
     0.03s 0.016% 99.58%      0.03s 0.016%  runtime.readgstatus (inline)
     0.01s 0.0054% 99.58%      0.03s 0.016%  runtime.readyWithTime
     0.03s 0.016% 99.60%      0.03s 0.016%  runtime.releasem (inline)
         0     0% 99.60%      0.03s 0.016%  runtime.stackcacherelease
         0     0% 99.60%      0.03s 0.016%  runtime.stackfree
     0.03s 0.016% 99.62%      0.03s 0.016%  testing.(*PB).Next (inline)
     0.02s 0.011% 99.63%      0.02s 0.011%  internal/runtime/atomic.(*Int64).Add (inline)
     0.02s 0.011% 99.64%      0.02s 0.011%  internal/runtime/atomic.(*Uint64).Add (inline)
     0.02s 0.011% 99.65%      0.02s 0.011%  runtime.(*activeSweep).end
     0.01s 0.0054% 99.65%      0.02s 0.011%  runtime.(*consistentHeapStats).release
     0.01s 0.0054% 99.66%      0.02s 0.011%  runtime.(*fixalloc).alloc
     0.01s 0.0054% 99.66%      0.02s 0.011%  runtime.(*gcControllerState).update
     0.02s 0.011% 99.68%      0.02s 0.011%  runtime.(*lfstack).pop (inline)
     0.01s 0.0054% 99.68%      0.02s 0.011%  runtime.(*moduledata).funcName
     0.02s 0.011% 99.69%      0.02s 0.011%  runtime.(*mspan).heapBitsSmallForAddr
     0.02s 0.011% 99.70%      0.02s 0.011%  runtime.(*mspan).nextFreeIndex
     0.02s 0.011% 99.71%      0.02s 0.011%  runtime.(*stkframe).argMapInternal
     0.02s 0.011% 99.72%      0.02s 0.011%  runtime.(*timer).needsAdd (inline)
     0.01s 0.0054% 99.73%      0.02s 0.011%  runtime.(*timers).unlock (inline)
         0     0% 99.73%      0.02s 0.011%  runtime.acquireSudog
         0     0% 99.73%      0.02s 0.011%  runtime.bgsweep
     0.02s 0.011% 99.74%      0.02s 0.011%  runtime.findmoduledatap (inline)
         0     0% 99.74%      0.02s 0.011%  runtime.funcname (inline)
         0     0% 99.74%      0.02s 0.011%  runtime.funcspdelta (inline)
         0     0% 99.74%      0.02s 0.011%  runtime.gcFlushBgCredit
         0     0% 99.74%      0.02s 0.011%  runtime.gcMarkTermination.forEachP.func6
     0.02s 0.011% 99.75%      0.02s 0.011%  runtime.libcCall
         0     0% 99.75%      0.02s 0.011%  runtime.notetsleep
         0     0% 99.75%      0.02s 0.011%  runtime.notetsleep_internal
     0.02s 0.011% 99.76%      0.02s 0.011%  runtime.procyield
     0.02s 0.011% 99.77%      0.02s 0.011%  runtime.pthread_cond_timedwait_relative_np
     0.01s 0.0054% 99.78%      0.02s 0.011%  runtime.runqget (inline)
         0     0% 99.78%      0.02s 0.011%  runtime.scanConservative
     0.02s 0.011% 99.79%      0.02s 0.011%  runtime.spanOf (inline)
         0     0% 99.79%      0.02s 0.011%  runtime.spanOfHeap
         0     0% 99.79%      0.02s 0.011%  runtime.startTheWorldWithSema
     0.01s 0.0054% 99.79%      0.02s 0.011%  runtime.step
     0.02s 0.011% 99.81%      0.02s 0.011%  runtime.traceEnabled (inline)
     0.02s 0.011% 99.82%      0.02s 0.011%  sync.(*Pool).pin
     0.01s 0.0054% 99.82%      0.01s 0.0054%  gogo
     0.01s 0.0054% 99.83%      0.01s 0.0054%  internal/runtime/atomic.(*Int32).Add (inline)
     0.01s 0.0054% 99.83%      0.01s 0.0054%  internal/runtime/atomic.(*Uint32).Add (inline)
     0.01s 0.0054% 99.84%      0.01s 0.0054%  internal/runtime/atomic.(*Uint32).Load (inline)
     0.01s 0.0054% 99.84%      0.01s 0.0054%  internal/runtime/atomic.(*UnsafePointer).Load (inline)
         0     0% 99.84%      0.01s 0.0054%  runtime.(*activeSweep).begin (inline)
     0.01s 0.0054% 99.85%      0.01s 0.0054%  runtime.(*consistentHeapStats).acquire
         0     0% 99.85%      0.01s 0.0054%  runtime.(*gcCPULimiterState).update
         0     0% 99.85%      0.01s 0.0054%  runtime.(*gcCPULimiterState).updateLocked
     0.01s 0.0054% 99.85%      0.01s 0.0054%  runtime.(*gcWork).dispose
     0.01s 0.0054% 99.86%      0.01s 0.0054%  runtime.(*guintptr).cas (inline)
     0.01s 0.0054% 99.86%      0.01s 0.0054%  runtime.(*limiterEvent).consume
     0.01s 0.0054% 99.87%      0.01s 0.0054%  runtime.(*mLockProfile).recordUnlock
         0     0% 99.87%      0.01s 0.0054%  runtime.(*mSpanStateBox).get (inline)
         0     0% 99.87%      0.01s 0.0054%  runtime.(*mcache).prepareForSweep
         0     0% 99.87%      0.01s 0.0054%  runtime.(*mcache).releaseAll
         0     0% 99.87%      0.01s 0.0054%  runtime.(*mheap).grow
         0     0% 99.87%      0.01s 0.0054%  runtime.(*mheap).nextSpanForSweep
     0.01s 0.0054% 99.88%      0.01s 0.0054%  runtime.(*moduledata).textAddr
         0     0% 99.88%      0.01s 0.0054%  runtime.(*mspan).initHeapBits
     0.01s 0.0054% 99.88%      0.01s 0.0054%  runtime.(*mspan).markBitsForIndex (inline)
         0     0% 99.88%      0.01s 0.0054%  runtime.(*mspan).writeHeapBitsSmall
         0     0% 99.88%      0.01s 0.0054%  runtime.(*pageAlloc).alloc
         0     0% 99.88%      0.01s 0.0054%  runtime.(*pageAlloc).allocRange
     0.01s 0.0054% 99.89%      0.01s 0.0054%  runtime.(*pageAlloc).allocToCache
         0     0% 99.89%      0.01s 0.0054%  runtime.(*pageAlloc).update
     0.01s 0.0054% 99.89%      0.01s 0.0054%  runtime.(*pallocBits).summarize
         0     0% 99.89%      0.01s 0.0054%  runtime.(*scavengerState).init.func1
         0     0% 99.89%      0.01s 0.0054%  runtime.(*scavengerState).wake
         0     0% 99.89%      0.01s 0.0054%  runtime.(*semaRoot).dequeue
     0.01s 0.0054% 99.90%      0.01s 0.0054%  runtime.(*semaRoot).queue
     0.01s 0.0054% 99.90%      0.01s 0.0054%  runtime.(*spanSet).pop
     0.01s 0.0054% 99.91%      0.01s 0.0054%  runtime.(*stackScanState).getPtr
     0.01s 0.0054% 99.91%      0.01s 0.0054%  runtime.(*sweepLocker).tryAcquire
     0.01s 0.0054% 99.92%      0.01s 0.0054%  runtime.(*timeHistogram).record
         0     0% 99.92%      0.01s 0.0054%  runtime.acquirep
         0     0% 99.92%      0.01s 0.0054%  runtime.adjustctxt
         0     0% 99.92%      0.01s 0.0054%  runtime.adjustframe
     0.01s 0.0054% 99.92%      0.01s 0.0054%  runtime.adjustpointer (inline)
         0     0% 99.92%      0.01s 0.0054%  runtime.casGToWaiting (inline)
         0     0% 99.92%      0.01s 0.0054%  runtime.casGToWaitingForGC
     0.01s 0.0054% 99.93%      0.01s 0.0054%  runtime.findnull
     0.01s 0.0054% 99.94%      0.01s 0.0054%  runtime.forEachG
         0     0% 99.94%      0.01s 0.0054%  runtime.forEachP (inline)
         0     0% 99.94%      0.01s 0.0054%  runtime.freeStackSpans
         0     0% 99.94%      0.01s 0.0054%  runtime.funcInfo.entry (inline)
         0     0% 99.94%      0.01s 0.0054%  runtime.funcMaxSPDelta
         0     0% 99.94%      0.01s 0.0054%  runtime.gcMarkTermination.func3
         0     0% 99.94%      0.01s 0.0054%  runtime.gcResetMarkState
         0     0% 99.94%      0.01s 0.0054%  runtime.gcStart.func4
         0     0% 99.94%      0.01s 0.0054%  runtime.goparkunlock (inline)
         0     0% 99.94%      0.01s 0.0054%  runtime.gostringnocopy (inline)
         0     0% 99.94%      0.01s 0.0054%  runtime.injectglist
         0     0% 99.94%      0.01s 0.0054%  runtime.injectglist.func1
         0     0% 99.94%      0.01s 0.0054%  runtime.mProf_Malloc
         0     0% 99.94%      0.01s 0.0054%  runtime.malg
         0     0% 99.94%      0.01s 0.0054%  runtime.mallocgcTiny
     0.01s 0.0054% 99.94%      0.01s 0.0054%  runtime.markBits.isMarked (inline)
     0.01s 0.0054% 99.95%      0.01s 0.0054%  runtime.mmap
         0     0% 99.95%      0.01s 0.0054%  runtime.netpollBreak (inline)
         0     0% 99.95%      0.01s 0.0054%  runtime.newMarkBits
     0.01s 0.0054%   100%      0.01s 0.0054%  runtime.pidleget
         0     0%   100%      0.01s 0.0054%  runtime.pidlegetSpinning
         0     0%   100%      0.01s 0.0054%  runtime.profilealloc
     0.01s 0.0054%   100%      0.01s 0.0054%  runtime.pthread_mutex_lock
     0.01s 0.0054%   100%      0.01s 0.0054%  runtime.pthread_mutex_unlock
     0.01s 0.0054%   100%      0.01s 0.0054%  runtime.puintptr.ptr (inline)
     0.01s 0.0054%   100%      0.01s 0.0054%  runtime.readUintptr (inline)
     0.01s 0.0054%   100%      0.01s 0.0054%  runtime.readvarint (inline)
     0.01s 0.0054%   100%      0.01s 0.0054%  runtime.recordspan
         0     0%   100%      0.01s 0.0054%  runtime.releasep
     0.01s 0.0054%   100%      0.01s 0.0054%  runtime.releasepNoTrace
         0     0%   100%      0.01s 0.0054%  runtime.shrinkstack
     0.01s 0.0054%   100%      0.01s 0.0054%  runtime.stackpoolfree
         0     0%   100%      0.01s 0.0054%  runtime.stkbucket
         0     0%   100%      0.01s 0.0054%  runtime.sysMap
         0     0%   100%      0.01s 0.0054%  runtime.sysMapOS
     0.01s 0.0054%   100%      0.01s 0.0054%  runtime.typePointers.nextFast (inline)
         0     0%   100%      0.01s 0.0054%  runtime.wakeNetPoller
         0     0%   100%      0.01s 0.0054%  runtime.wakeNetpoll
         0     0%   100%      0.01s 0.0054%  testing.(*B).run1.func1
