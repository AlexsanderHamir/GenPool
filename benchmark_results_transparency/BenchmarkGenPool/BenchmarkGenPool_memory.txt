File: pool.test
Type: alloc_space
Time: 2025-07-10 14:56:11 PDT
Showing nodes accounting for 5820MB, 100% of 5820MB total
      flat  flat%   sum%        cum   cum%
   34.50MB  0.59%  0.59%  5774.71MB 99.22%  testing.(*B).RunParallel.func1
         0     0%  0.59%  5740.21MB 98.63%  github.com/AlexsanderHamir/GenPool/pool_test.BenchmarkGenPool.func1
 5710.71MB 98.12% 98.71%  5723.21MB 98.34%  github.com/AlexsanderHamir/GenPool/pool_test.highLatencyWorkload
         0     0% 98.71%    35.50MB  0.61%  testing.(*B).runN
         0     0% 98.71%       35MB   0.6%  github.com/AlexsanderHamir/GenPool/pool_test.BenchmarkGenPool
      35MB   0.6% 99.32%       35MB   0.6%  testing.(*B).RunParallel
         0     0% 99.32%    24.50MB  0.42%  testing.(*B).launch
         0     0% 99.32%       17MB  0.29%  github.com/AlexsanderHamir/GenPool/pool.(*ShardedPool[go.shape.struct { Name string; Data []uint8; github.com/AlexsanderHamir/GenPool/pool_test._ [24]uint8; PoolFields = github.com/AlexsanderHamir/GenPool/pool.PoolFields[github.com/AlexsanderHamir/GenPool/pool_test.BenchmarkObject] },go.shape.*github.com/AlexsanderHamir/GenPool/pool_test.BenchmarkObject]).RetrieveOrCreate
      17MB  0.29% 99.61%       17MB  0.29%  github.com/AlexsanderHamir/GenPool/pool_test.allocator
   12.50MB  0.21% 99.82%    12.50MB  0.21%  time.Sleep
         0     0% 99.82%    10.50MB  0.18%  testing.(*B).run1.func1
         0     0% 99.82%     3.06MB 0.053%  runtime/pprof.profileWriter
       3MB 0.052% 99.87%        3MB 0.052%  runtime.malg
         0     0% 99.87%        3MB 0.052%  runtime.newproc.func1
         0     0% 99.87%        3MB 0.052%  runtime.newproc1
         0     0% 99.87%        3MB 0.052%  runtime.systemstack
         0     0% 99.87%     2.56MB 0.044%  runtime/pprof.(*profileBuilder).appendLocsForStack
         0     0% 99.87%     2.56MB 0.044%  runtime/pprof.(*profileBuilder).build
         0     0% 99.87%     2.56MB 0.044%  runtime/pprof.(*profileBuilder).emitLocation
         0     0% 99.87%     2.22MB 0.038%  main.main
         0     0% 99.87%     2.22MB 0.038%  runtime.main
         0     0% 99.87%     2.22MB 0.038%  testing.(*M).Run
    0.88MB 0.015% 99.89%     2.05MB 0.035%  compress/flate.NewWriter (inline)
         0     0% 99.89%     2.05MB 0.035%  compress/gzip.(*Writer).Write
         0     0% 99.89%     2.05MB 0.035%  runtime/pprof.(*profileBuilder).flush
       2MB 0.034% 99.92%        2MB 0.034%  runtime.allocm
         0     0% 99.92%        2MB 0.034%  runtime.newm
         0     0% 99.92%        2MB 0.034%  runtime.startm
    1.72MB  0.03%   100%     1.72MB  0.03%  runtime/pprof.StartCPUProfile
         0     0%   100%     1.72MB  0.03%  testing.(*M).before
         0     0%   100%     1.72MB  0.03%  testing/internal/testdeps.TestDeps.StartCPUProfile
         0     0%   100%     1.50MB 0.026%  runtime.mstart
         0     0%   100%     1.50MB 0.026%  runtime.mstart0
         0     0%   100%     1.50MB 0.026%  runtime.mstart1
         0     0%   100%     1.50MB 0.026%  runtime.resetspinning
         0     0%   100%     1.50MB 0.026%  runtime.schedule
         0     0%   100%     1.50MB 0.026%  runtime.wakep
    1.17MB  0.02%   100%     1.17MB  0.02%  compress/flate.(*compressor).init
    0.51MB 0.0087%   100%     0.51MB 0.0087%  runtime/pprof.(*profileBuilder).stringIndex (inline)
    0.50MB 0.0087%   100%     0.50MB 0.0087%  runtime/pprof.(*profMap).lookup
         0     0%   100%     0.50MB 0.0087%  runtime/pprof.(*profileBuilder).addCPUData
         0     0%   100%     0.50MB 0.0086%  runtime.(*scavengerState).wake
         0     0%   100%     0.50MB 0.0086%  runtime.injectglist
         0     0%   100%     0.50MB 0.0086%  runtime.injectglist.func1
         0     0%   100%     0.50MB 0.0086%  runtime.mcall
         0     0%   100%     0.50MB 0.0086%  runtime.park_m
         0     0%   100%     0.50MB 0.0086%  runtime.sysmon
         0     0%   100%     0.50MB 0.0086%  fmt.Fprintf
         0     0%   100%     0.50MB 0.0086%  fmt.newPrinter
         0     0%   100%     0.50MB 0.0086%  sync.(*Once).Do (inline)
         0     0%   100%     0.50MB 0.0086%  sync.(*Once).doSlow
         0     0%   100%     0.50MB 0.0086%  sync.(*Pool).Get
         0     0%   100%     0.50MB 0.0086%  sync.(*Pool).pin
    0.50MB 0.0086%   100%     0.50MB 0.0086%  sync.(*Pool).pinSlow
         0     0%   100%     0.50MB 0.0086%  testing.(*B).Run
         0     0%   100%     0.50MB 0.0086%  testing.(*B).run
         0     0%   100%     0.50MB 0.0086%  testing.(*B).run.func1
         0     0%   100%     0.50MB 0.0086%  testing.runBenchmarks
         0     0%   100%     0.50MB 0.0086%  testing.runBenchmarks.func1
